import { redirect } from 'next/navigation'
import { createClient } from '@/lib/supabase/server'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/Card'
import { Button } from '@/components/ui/Button'
import Link from 'next/link'
import { formatCurrency, getDaysRemaining, isSubscriptionActive } from '@/lib/utils'

export const dynamic = 'force-dynamic'

export default async function DashboardPage() {
  const supabase = await createClient()

  const {
    data: { user },
  } = await supabase.auth.getUser()

  if (!user) {
    redirect('/auth/login')
  }

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: userData, error } = await supabase
    .from('users')
    .select('*, plans(*)')
    .eq('id', user.id)
    .single()

  if (error) {
    console.error('Error fetching user data:', error)
  }

  const balance = userData?.balance || 0
  const subscriptionExpires = userData?.subscription_expires
  const plan = userData?.plans
  const daysRemaining = getDaysRemaining(subscriptionExpires)
  const isActive = isSubscriptionActive(subscriptionExpires)

  return (
    <div className="space-y-6">
      <div>
        <h1 className="text-3xl font-bold mb-2">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
        <p className="text-white/60">
          {userData?.name || `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${userData?.telegram_id}`}
        </p>
      </div>

      <div className="grid gap-6 md:grid-cols-2">
        {/* –ë–∞–ª–∞–Ω—Å */}
        <Card>
          <CardHeader>
            <CardDescription>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å</CardDescription>
            <CardTitle className="text-4xl">{formatCurrency(balance)}</CardTitle>
          </CardHeader>
          <CardContent>
            <Link href="/pay">
              <Button className="w-full">–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</Button>
            </Link>
          </CardContent>
        </Card>

        {/* –ü–æ–¥–ø–∏—Å–∫–∞ */}
        <Card>
          <CardHeader>
            <CardDescription>–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏</CardDescription>
            <CardTitle className="text-4xl">
              {isActive ? (
                <span className="text-green-400">{daysRemaining} –¥–Ω–µ–π</span>
              ) : (
                <span className="text-red-400">–ù–µ–∞–∫—Ç–∏–≤–Ω–∞</span>
              )}
            </CardTitle>
          </CardHeader>
          <CardContent>
            {plan ? (
              <div className="space-y-2">
                <p className="text-sm text-white/60">
                  –¢–∞—Ä–∏—Ñ: <span className="text-white font-medium">{plan.name}</span>
                </p>
                <p className="text-sm text-white/60">
                  –°—Ç–æ–∏–º–æ—Å—Ç—å: <span className="text-white font-medium">{formatCurrency(plan.price)}</span>
                </p>
              </div>
            ) : (
              <p className="text-sm text-white/60 mb-4">–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞</p>
            )}
            <Link href="/code">
              <Button variant="outline" className="w-full mt-4">
                –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
              </Button>
            </Link>
          </CardContent>
        </Card>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <Card>
        <CardHeader>
          <CardTitle>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid gap-4 sm:grid-cols-2 lg:grid-cols-4">
            <Link href="/pay">
              <Button variant="secondary" className="w-full h-20">
                <div className="text-center">
                  <div className="text-2xl mb-1">üí≥</div>
                  <div className="text-sm">–û–ø–ª–∞—Ç–∞</div>
                </div>
              </Button>
            </Link>
            <Link href="/code">
              <Button variant="secondary" className="w-full h-20">
                <div className="text-center">
                  <div className="text-2xl mb-1">üéüÔ∏è</div>
                  <div className="text-sm">–ê–∫—Ç–∏–≤–∞—Ü–∏—è</div>
                </div>
              </Button>
            </Link>
            <Link href="/referral">
              <Button variant="secondary" className="w-full h-20">
                <div className="text-center">
                  <div className="text-2xl mb-1">üë•</div>
                  <div className="text-sm">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è</div>
                </div>
              </Button>
            </Link>
            <Link href="/help">
              <Button variant="secondary" className="w-full h-20">
                <div className="text-center">
                  <div className="text-2xl mb-1">‚ùì</div>
                  <div className="text-sm">–ü–æ–º–æ—â—å</div>
                </div>
              </Button>
            </Link>
          </div>
        </CardContent>
      </Card>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      {!isActive && (
        <Card className="border-amber-500/50 bg-amber-500/10">
          <CardContent className="pt-6">
            <div className="flex items-start gap-3">
              <div className="text-2xl">‚ö†Ô∏è</div>
              <div>
                <h3 className="font-semibold text-amber-400 mb-1">
                  –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
                </h3>
                <p className="text-sm text-white/80">
                  –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –∫–æ–¥, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VPN.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  )
}

